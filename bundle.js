(()=>{var t={56:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},72:t=>{"use strict";var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var s={},i=[],a=0;a<t.length;a++){var l=t[a],d=o.base?l[0]+o.base:l[0],c=s[d]||0,h="".concat(d," ").concat(c);s[d]=c+1;var p=n(h),g={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(g);else{var u=r(g,o);o.byIndex=a,e.splice(a,0,{identifier:h,updater:u,references:1})}i.push(h)}return i}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var s=o(t=t||[],r=r||{});return function(t){t=t||[];for(var i=0;i<s.length;i++){var a=n(s[i]);e[a].references--}for(var l=o(t,r),d=0;d<s.length;d++){var c=n(s[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}s=l}}},113:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},294:()=>{class t extends HTMLElement{constructor(){super(),this.polygons=[],this.polygonGenerator=null,this.init()}init(){this.innerHTML='\n            <div class="buffer-zone-container drop-zone">\n                <div class="polygons-container"></div>\n            </div>\n        ',this.container=this.querySelector(".polygons-container"),this.dropZone=this.querySelector(".drop-zone"),this.setupDragAndDrop(),window.PolygonGenerator?this.polygonGenerator=new window.PolygonGenerator:setTimeout(()=>{this.polygonGenerator=new window.PolygonGenerator},100)}setupDragAndDrop(){this.dropZone.addEventListener("dragover",t=>{t.preventDefault(),this.dropZone.classList.add("drag-over")}),this.dropZone.addEventListener("dragleave",t=>{this.dropZone.contains(t.relatedTarget)||this.dropZone.classList.remove("drag-over")}),this.dropZone.addEventListener("drop",t=>{t.preventDefault(),this.dropZone.classList.remove("drag-over");const e=t.dataTransfer.getData("text/plain");"work-zone"===t.dataTransfer.getData("source")&&e&&this.handlePolygonDrop(e)})}handlePolygonDrop(t){const e=document.querySelector("work-zone");if(e){const n=e.removePolygon(t);n&&this.addPolygon(n)}}addPolygons(t){t.forEach(t=>this.addPolygon(t))}addPolygon(t){this.polygonGenerator||(this.polygonGenerator=new window.PolygonGenerator),this.polygons.push(t);const e=document.createElement("div");e.className="polygon-wrapper",e.setAttribute("data-polygon-id",t.id),e.style.cssText="\n            display: inline-block;\n            cursor: move;\n            margin: 5px;\n            user-select: none;\n        ";const n=this.polygonGenerator.createSVGPolygon(t);n.style.display="block",e.appendChild(n),this.makeDraggable(e,t),this.container.appendChild(e)}makeDraggable(t,e){t.setAttribute("draggable","true"),t.addEventListener("dragstart",n=>{n.dataTransfer.setData("text/plain",e.id),n.dataTransfer.setData("source","buffer-zone"),t.classList.add("dragging")}),t.addEventListener("dragend",e=>{t.classList.remove("dragging")})}removePolygon(t){const e=this.polygons.findIndex(e=>e.id===t);if(-1!==e){const n=this.polygons[e];this.polygons.splice(e,1);const o=this.container.querySelector(`[data-polygon-id="${t}"]`);return o&&o.remove(),n}return null}getPolygons(){return[...this.polygons]}loadPolygons(t){this.clear(),t.forEach(t=>this.addPolygon(t))}clear(){this.polygons=[],this.container.innerHTML=""}}customElements.define("buffer-zone",t)},314:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n}).join("")},e.i=function(t,n,o,r,s){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(i[l]=!0)}for(var d=0;d<t.length;d++){var c=[].concat(t[d]);o&&i[c[0]]||(void 0!==s&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=s),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},365:(t,e,n)=>{"use strict";n.d(e,{A:()=>a});var o=n(601),r=n.n(o),s=n(314),i=n.n(s)()(r());i.push([t.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: Arial, sans-serif;\n    background-color: #f0f0f0;\n}\n\n.app {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n}\n\n.toolbar {\n    background-color: #666;\n    padding: 10px;\n    display: flex;\n    gap: 10px;\n}\n\n.btn {\n    background-color: #999;\n    border: none;\n    padding: 8px 16px;\n    border-radius: 4px;\n    cursor: pointer;\n    color: white;\n    font-size: 14px;\n    transition: background-color 0.2s;\n}\n\n.btn:hover {\n    background-color: #777;\n}\n\n.btn:active {\n    background-color: #555;\n}\n\nbuffer-zone {\n    flex: 1;\n    min-height: 200px;\n    display: block;\n    overflow: hidden;\n}\n\n.buffer-zone-container {\n    width: 100%;\n    height: 100%;\n    background-color: #666;\n    overflow: auto;\n    padding: 10px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    align-content: flex-start;\n}\n\n.polygons-container {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    width: 100%;\n}\n\nwork-zone {\n    flex: 1;\n    min-height: 300px;\n    display: block;\n    position: relative;\n    overflow: hidden;\n}\n\n.work-zone-container {\n    width: 100%;\n    height: 100%;\n    background-color: #333;\n    position: relative;\n}\n\n/* Стили для полигонов */\n.polygon {\n    cursor: move;\n    transition: opacity 0.2s;\n}\n\n.polygon:hover {\n    opacity: 0.8;\n}\n\n.polygon.dragging {\n    opacity: 0.6;\n    pointer-events: none;\n}\n\n.polygon-wrapper {\n    display: inline-block;\n    transition: transform 0.2s, opacity 0.2s;\n    border-radius: 4px;\n    padding: 2px;\n}\n\n.polygon-wrapper:hover {\n    transform: scale(1.05);\n}\n\n.polygon-wrapper.dragging {\n    opacity: 0.6;\n    transform: rotate(5deg);\n}\n\n/* Стили для зон drop */\n.drop-zone {\n    position: relative;\n}\n\n.drop-zone.drag-over {\n    background-color: rgba(0, 255, 0, 0.1);\n}\n\n/* Стили для координатной сетки */\n.grid-line {\n    stroke: #555;\n    stroke-width: 1;\n    opacity: 0.5;\n}\n\n.grid-line.major {\n    stroke: #777;\n    stroke-width: 1.5;\n    opacity: 0.8;\n}\n\n.axis-label {\n    fill: #aaa;\n    font-size: 12px;\n    font-family: Arial, sans-serif;\n}",""]);const a=i},540:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},595:()=>{window.PolygonGenerator=class{constructor(){this.colors=["#B91C1C","#DC2626","#EF4444","#F87171","#7C2D12","#EA580C","#F97316","#FB923C","#065F46","#059669","#10B981","#34D399","#1E3A8A","#3B82F6","#60A5FA","#93C5FD"]}generatePolygons(t){const e=[];for(let n=0;n<t;n++){const t=this.generateSinglePolygon();e.push(t)}return e}generateSinglePolygon(){const t=Math.floor(8*Math.random())+3,e=80*Math.random()+10,n=80*Math.random()+10,o=30*Math.random()+15,r=this.colors[Math.floor(Math.random()*this.colors.length)],s=this.generatePolygonPoints(e,n,o,t);return{id:this.generateId(),points:s,color:r,x:0,y:0}}generatePolygonPoints(t,e,n,o){const r=[],s=2*Math.PI/o;for(let i=0;i<o;i++){const o=i*s+.5*Math.random()-.25,a=n*(.7+.6*Math.random()),l=t+Math.cos(o)*a,d=e+Math.sin(o)*a;r.push({x:Math.round(10*l)/10,y:Math.round(10*d)/10})}return r}generateId(){return"polygon_"+Date.now()+"_"+Math.random().toString(36).substr(2,9)}pointsToString(t){return t.map(t=>`${t.x},${t.y}`).join(" ")}createSVGPolygon(t){const e=document.createElementNS("http://www.w3.org/2000/svg","svg");e.setAttribute("width","120"),e.setAttribute("height","120"),e.setAttribute("viewBox","0 0 120 120"),e.style.pointerEvents="none";const n=document.createElementNS("http://www.w3.org/2000/svg","polygon");return n.setAttribute("points",this.pointsToString(t.points)),n.setAttribute("fill",t.color),n.setAttribute("stroke","#333"),n.setAttribute("stroke-width","1"),e.appendChild(n),e}}},601:t=>{"use strict";t.exports=function(t){return t[1]}},659:t=>{"use strict";var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},825:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},899:()=>{class t extends HTMLElement{constructor(){super(),this.polygons=[],this.polygonGenerator=null,this.scale=1,this.offsetX=0,this.offsetY=0,this.minScale=.1,this.maxScale=10,this.isPanning=!1,this.lastPanX=0,this.lastPanY=0,this.init()}init(){this.innerHTML='\n            <div class="work-zone-container drop-zone">\n                <svg class="work-svg" width="100%" height="100%">\n                    <defs>\n                        <pattern id="grid" width="20" height="20" patternUnits="userSpaceOnUse">\n                            <path d="M 20 0 L 0 0 0 20" fill="none" stroke="#555" stroke-width="0.5" opacity="0.3"/>\n                        </pattern>\n                        <pattern id="major-grid" width="100" height="100" patternUnits="userSpaceOnUse">\n                            <path d="M 100 0 L 0 0 0 100" fill="none" stroke="#777" stroke-width="1" opacity="0.5"/>\n                        </pattern>\n                    </defs>\n                    \n                    <g class="grid-group">\n                        <rect width="100%" height="100%" fill="url(#grid)" />\n                        <rect width="100%" height="100%" fill="url(#major-grid)" />\n                    </g>\n                    \n                    <g class="axes-group">\n                        \x3c!-- Оси будут добавлены динамически --\x3e\n                    </g>\n                    \n                    <g class="polygons-group">\n                        \x3c!-- Полигоны будут добавлены сюда --\x3e\n                    </g>\n                    \n                    <g class="labels-group">\n                        \x3c!-- Подписи осей будут добавлены сюда --\x3e\n                    </g>\n                </svg>\n            </div>\n        ',this.container=this.querySelector(".work-zone-container"),this.svg=this.querySelector(".work-svg"),this.polygonsGroup=this.querySelector(".polygons-group"),this.labelsGroup=this.querySelector(".labels-group"),this.axesGroup=this.querySelector(".axes-group"),this.setupEventListeners(),this.updateTransform(),this.drawAxes(),window.PolygonGenerator?this.polygonGenerator=new window.PolygonGenerator:setTimeout(()=>{this.polygonGenerator=new window.PolygonGenerator},100)}setupEventListeners(){this.container.addEventListener("wheel",t=>{t.preventDefault();const e=this.container.getBoundingClientRect(),n=t.clientX-e.left,o=t.clientY-e.top,r=t.deltaY>0?.9:1.1,s=Math.max(this.minScale,Math.min(this.maxScale,this.scale*r)),i=s/this.scale;this.offsetX=n-(n-this.offsetX)*i,this.offsetY=o-(o-this.offsetY)*i,this.scale=s,this.updateTransform(),this.drawAxes()}),this.container.addEventListener("mousedown",t=>{0===t.button&&(this.isPanning=!0,this.lastPanX=t.clientX,this.lastPanY=t.clientY,this.container.style.cursor="grabbing")}),document.addEventListener("mousemove",t=>{if(this.isPanning){const e=t.clientX-this.lastPanX,n=t.clientY-this.lastPanY;this.offsetX+=e,this.offsetY+=n,this.lastPanX=t.clientX,this.lastPanY=t.clientY,this.updateTransform(),this.drawAxes()}}),document.addEventListener("mouseup",()=>{this.isPanning&&(this.isPanning=!1,this.container.style.cursor="default")}),this.addEventListener("dragover",t=>{t.preventDefault(),this.container.classList.add("drag-over")}),this.addEventListener("dragleave",t=>{this.contains(t.relatedTarget)||this.container.classList.remove("drag-over")}),this.addEventListener("drop",t=>{t.preventDefault(),this.container.classList.remove("drag-over");const e=t.dataTransfer.getData("text/plain");if("buffer-zone"===t.dataTransfer.getData("source")&&e){const n=this.container.getBoundingClientRect(),o=(t.clientX-n.left-this.offsetX)/this.scale,r=(t.clientY-n.top-this.offsetY)/this.scale;this.handlePolygonDrop(e,o,r)}})}handlePolygonDrop(t,e,n){const o=document.querySelector("buffer-zone");if(o){const r=o.removePolygon(t);r&&(r.x=e,r.y=n,this.addPolygon(r))}}updateTransform(){const t=`translate(${this.offsetX}, ${this.offsetY}) scale(${this.scale})`;this.polygonsGroup.setAttribute("transform",t)}drawAxes(){this.axesGroup.innerHTML="",this.labelsGroup.innerHTML="";const t=this.container.getBoundingClientRect(),e=t.width,n=t.height;let o=50;for(;o*this.scale<30;)o*=2;for(;o*this.scale>100;)o/=2;this.drawAxis("x",e,n,o),this.drawAxis("y",e,n,o)}drawAxis(t,e,n,o){const r="x"===t,s=r?e:n,i=r?this.offsetX:this.offsetY,a=Math.floor(-i/(o*this.scale))*o,l=Math.ceil((s-i)/(o*this.scale))*o;for(let t=a;t<=l;t+=o){const o=t*this.scale+i;if(o>=0&&o<=s){const s=document.createElementNS("http://www.w3.org/2000/svg","line");if(r?(s.setAttribute("x1",o),s.setAttribute("y1",Math.max(0,Math.min(n,this.offsetY))),s.setAttribute("x2",o),s.setAttribute("y2",Math.max(0,Math.min(n,this.offsetY+10)))):(s.setAttribute("x1",Math.max(0,Math.min(e,this.offsetX))),s.setAttribute("y1",o),s.setAttribute("x2",Math.max(0,Math.min(e,this.offsetX+10))),s.setAttribute("y2",o)),s.setAttribute("stroke","#aaa"),s.setAttribute("stroke-width","1"),this.axesGroup.appendChild(s),0!==t){const s=document.createElementNS("http://www.w3.org/2000/svg","text");s.textContent=Math.round(t),s.setAttribute("fill","#aaa"),s.setAttribute("font-size","12"),s.setAttribute("font-family","Arial"),r?(s.setAttribute("x",o),s.setAttribute("y",Math.max(20,Math.min(n-5,this.offsetY+20))),s.setAttribute("text-anchor","middle")):(s.setAttribute("x",Math.max(15,Math.min(e-30,this.offsetX+15))),s.setAttribute("y",o),s.setAttribute("text-anchor","start"),s.setAttribute("dominant-baseline","middle")),this.labelsGroup.appendChild(s)}}}}addPolygon(t){this.polygonGenerator||(this.polygonGenerator=new window.PolygonGenerator),this.polygons.push(t);const e=document.createElementNS("http://www.w3.org/2000/svg","g");e.setAttribute("class","polygon"),e.setAttribute("data-polygon-id",t.id),e.setAttribute("transform",`translate(${t.x}, ${t.y})`);const n=document.createElementNS("http://www.w3.org/2000/svg","polygon");n.setAttribute("points",this.polygonGenerator.pointsToString(t.points)),n.setAttribute("fill",t.color),n.setAttribute("stroke","#333"),n.setAttribute("stroke-width","1"),e.appendChild(n),this.makeDraggable(e,t),this.polygonsGroup.appendChild(e)}makeDraggable(t,e){t.setAttribute("draggable","true"),t.addEventListener("dragstart",n=>{n.dataTransfer.setData("text/plain",e.id),n.dataTransfer.setData("source","work-zone"),t.classList.add("dragging")}),t.addEventListener("dragend",e=>{t.classList.remove("dragging")})}removePolygon(t){const e=this.polygons.findIndex(e=>e.id===t);if(-1!==e){const n=this.polygons[e];this.polygons.splice(e,1);const o=this.polygonsGroup.querySelector(`[data-polygon-id="${t}"]`);return o&&o.remove(),n}return null}getPolygons(){return[...this.polygons]}loadPolygons(t){this.clear(),t.forEach(t=>this.addPolygon(t))}clear(){this.polygons=[],this.polygonsGroup.innerHTML=""}}customElements.define("work-zone",t)}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var s=e[o]={id:o,exports:{}};return t[o](s,s.exports,n),s.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{"use strict";var t=n(72),e=n.n(t),o=n(825),r=n.n(o),s=n(659),i=n.n(s),a=n(56),l=n.n(a),d=n(540),c=n.n(d),h=n(113),p=n.n(h),g=n(365),u={};u.styleTagTransform=p(),u.setAttributes=l(),u.insert=i().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=c(),e()(g.A,u),g.A&&g.A.locals&&g.A.locals,n(294),n(899),n(595),window.polygonApp=new class{constructor(){this.bufferZone=null,this.workZone=null,this.polygonGenerator=null,this.init()}init(){document.addEventListener("DOMContentLoaded",()=>{this.bufferZone=document.querySelector("buffer-zone"),this.workZone=document.querySelector("work-zone"),this.polygonGenerator=new PolygonGenerator,this.setupEventListeners(),this.loadData()})}setupEventListeners(){const t=document.getElementById("createBtn"),e=document.getElementById("saveBtn"),n=document.getElementById("resetBtn");t.addEventListener("click",()=>this.createPolygons()),e.addEventListener("click",()=>this.saveData()),n.addEventListener("click",()=>this.resetData())}createPolygons(){const t=Math.floor(16*Math.random())+5,e=this.polygonGenerator.generatePolygons(t);this.bufferZone.addPolygons(e)}saveData(){const t={buffer:this.bufferZone.getPolygons(),work:this.workZone.getPolygons(),timestamp:Date.now()};localStorage.setItem("polygonEditorData",JSON.stringify(t)),console.log("Данные сохранены")}loadData(){const t=localStorage.getItem("polygonEditorData");if(t)try{const e=JSON.parse(t);e.buffer&&this.bufferZone.loadPolygons(e.buffer),e.work&&this.workZone.loadPolygons(e.work),console.log("Данные загружены")}catch(t){console.error("Ошибка при загрузке данных:",t)}}resetData(){localStorage.removeItem("polygonEditorData"),this.bufferZone.clear(),this.workZone.clear(),console.log("Данные сброшены")}}})()})();